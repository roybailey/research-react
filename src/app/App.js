import React, { Component } from 'react';import { render } from 'react-dom';import { Router, Route, IndexRoute, Link } from 'react-router';import createBrowserHistory from 'history/lib/createBrowserHistory'import { compose, createStore, combineReducers, applyMiddleware } from 'redux'import thunkMiddleware from 'redux-thunk'import createLogger from 'redux-logger'import { Provider } from 'react-redux'import { syncReduxAndRouter, routeReducer } from 'redux-simple-router'import reducers from '../redux-simple-router/reducers'/* reducer */const reducer = combineReducers(  Object.assign(    {}, reducers, { routing: routeReducer}  ));/* logger */const loggerMiddleware = createLogger()/* applyMiddleware */const createStoreWithMiddleware = applyMiddleware(  thunkMiddleware,  loggerMiddleware)(createStore)/* store */let initialState = undefinedconst store = createStoreWithMiddleware(reducer, initialState)import About from './About';import Repos from './Repos';import RepoDetails from './RepoDetails';import Home from './Home';import ServerError from './ServerError';import ChartApp from '../react-chart/js/App.jsx';import Package from '../redux-simple-router/containers/Package'import Packages from '../redux-simple-router/containers/Packages'import SimpleReduxRouterHome from '../redux-simple-router/containers/Home'import SimpleReduxRouterApp from '../redux-simple-router/containers/App'import KanbanBoardContainer from '../kanban/components/KanbanBoardContainer';import KanbanBoard from '../kanban/components/KanbanBoard';import EditCard from '../kanban/components/EditCard';import NewCard from '../kanban/components/NewCard';class App extends Component {  render() {    return (      <div>        <header><a href="/">App</a></header>        <menu>          <ul>            <li><Link to="/about" activeClassName="active">About</Link></li>            <li><Link to="/repos" activeClassName="active">Repos</Link></li>            <li><Link to="/chart" activeClassName="active">Chart</Link></li>            <li><Link to="/kanban" activeClassName="active">Kanban</Link></li>            <li><Link to="/simple" activeClassName="active">Simple</Link></li>          </ul>        </menu>        {this.props.children}      </div>    );  }}render((  <Provider store={store}>    <div>      <Router history={createBrowserHistory()}>        <Route path="/" component={App}>          <IndexRoute component={Home}/>          <Route path="about" component={About} title="About Page"/>          <Route path="repos" component={Repos}>            <Route path="/repo/:repo_name" component={RepoDetails} />          </Route>          <Route path="chart" component={ChartApp} title="Chart App"/>          <Route path="kanban" component={KanbanBoardContainer} title="Kanban App">            <IndexRoute component={KanbanBoard}/>            <Route path="new" component={NewCard} />            <Route path="edit/:card_id" component={EditCard} />          </Route>          <Route path="simple" component={SimpleReduxRouterApp} title="Simple Router">            <IndexRoute component={SimpleReduxRouterHome}/>            <Route path="packages" component={Packages} />            <Route path="/package/:id/:name" component={Package}/>          </Route>          <Route path="error" component={ServerError} />        </Route>      </Router>          </div>  </Provider>), document.getElementById('root'));